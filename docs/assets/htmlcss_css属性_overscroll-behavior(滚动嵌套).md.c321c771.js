import{_ as s,c as a,o as e,a as n}from"./app.6f306bdd.js";const o="/docs/assets/beh.b0cecb89.png",l="/docs/assets/scroll-edge.b4a53eb2.gif",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"overscroll-behavior让滚动嵌套时父滚动不触发","slug":"overscroll-behavior让滚动嵌套时父滚动不触发","link":"#overscroll-behavior让滚动嵌套时父滚动不触发","children":[]}],"relativePath":"htmlcss/css属性/overscroll-behavior(滚动嵌套).md","lastUpdated":1720082435000}'),r={name:"htmlcss/css属性/overscroll-behavior(滚动嵌套).md"},p=n('<h3 id="overscroll-behavior让滚动嵌套时父滚动不触发" tabindex="-1">overscroll-behavior让滚动嵌套时父滚动不触发 <a class="header-anchor" href="#overscroll-behavior让滚动嵌套时父滚动不触发" aria-hidden="true">#</a></h3><h2>子元素滚动外面不滚动</h2><p>web网页开发中，滚动嵌套还是很常见的。</p><p>例如我现在写这篇文章的wordpress后台的分类目录就有一个局部滚动条。</p><img src="'+o+'" style="width:300px;"><p>在默认情况下，里面的滚动条滚到到底部边缘然后再继续滚动的时候，父滚动条会继续跟着滚动。</p><img src="'+l+`" style="width:300px;"><p>希望就里面的局部区域安安静静地滚动，不会影响外面页面的大滚动条，例如上面分类目录滚动条，或者下拉列表里面的滚动条</p><p>我们可以通过设置overscroll-behavior属性来设置。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#6A9955;">/* 支持1~2个值，因此，下面写法都是OK的： */</span></span>
<span class="line"><span style="color:#6A9955;">/* 单个关键字值 */</span></span>
<span class="line"><span style="color:#569CD6;">overscroll-behavior</span><span style="color:#D4D4D4;">: auto;     </span><span style="color:#6A9955;">/* 默认值 */</span></span>
<span class="line"><span style="color:#569CD6;">overscroll-behavior</span><span style="color:#D4D4D4;">: contain;</span></span>
<span class="line"><span style="color:#569CD6;">overscroll-behavior</span><span style="color:#D4D4D4;">: none;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* 两个值，分别表示x方向和y方向 */</span></span>
<span class="line"><span style="color:#569CD6;">overscroll-behavior</span><span style="color:#D4D4D4;">: auto contain;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2>参数</h2><h4><code>auto</code></h4><p> 默认值。就是我们默认看到的滚动行为表现，滚动到边缘后继续滚动外部的可滚动容器。</p><h4><code>contain</code></h4><p>默认的滚动溢出行为只会表现在当前元素的内部（例如“反弹”效果或刷新），不会对相邻的滚动区域进行滚动。例如创建了一个浮层，浮层滚动（带弹性效果），但是底层元素不会滚动。</p><h4><code>none</code></h4><p>相邻的滚动区域不会发生滚动，并且会阻止默认的滚动溢出行为</p><p><code>contain</code> 和<code>none</code>的行为差异体现主要在移动端。</p>`,18),c=[p];function t(i,d,h,b,_,v){return e(),a("div",null,c)}const D=s(r,[["render",t]]);export{u as __pageData,D as default};
