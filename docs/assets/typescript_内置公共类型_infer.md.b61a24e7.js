import{_ as s,c as n,o as a,a as l}from"./app.6f306bdd.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"infer可以推断出联合类型","slug":"infer可以推断出联合类型","link":"#infer可以推断出联合类型","children":[]},{"level":3,"title":"infer可以推断出交叉类型","slug":"infer可以推断出交叉类型","link":"#infer可以推断出交叉类型","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"typescript/内置公共类型/infer.md","lastUpdated":1687339744000}'),p={name:"typescript/内置公共类型/infer.md"},e=l(`<div class="s1">通过 let 来声明了一个变量，那怎样声明一个不确定的类型变量呢？ 答案是使用 infer 关键字，infer R 就是声明了一个类型变量 R</div><div class="s1">在条件类型表达式中，可以在 extends 条件语句中使用 infer 关键字来声明一个待推断的类型变量</div><div class="s1">infer 的作用是让 TypeScript 自己推断，并将推断的结果存储到一个类型变量中，infer 只能用于 extends 语句中</div><h4>需要注意的是，infer 只能在条件类型的 extends 子句中使用，同时 infer 声明的类型变量只在条件类型的 true 分支中可用</h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 你知道如何获取 T0 数组类型中元素的类型和 T1 函数类型中的返回值类型么</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T0</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[];</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T1</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 方式一</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UnpackedArray</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">)[] ? </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">T</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U0</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">UnpackedArray</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T0</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#6A9955;">// string</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>为了便于大家的理解，我们来演示一下 UnpackedArray 工具类型的执行流程</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U0</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">UnpackedArray</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T0</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#6A9955;">// T =&gt; T0: string[]</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UnpackedArray</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[]&gt; = </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[] </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">)[] ? </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[] </span></span>
<span class="line"><span style="color:#6A9955;">// string[] extends (infer U)[] 模式匹配成功</span></span>
<span class="line"><span style="color:#6A9955;">// U =&gt; string</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="infer可以推断出联合类型" tabindex="-1">infer可以推断出联合类型 <a class="header-anchor" href="#infer可以推断出联合类型" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Foo</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> } ? </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T11</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Foo</span><span style="color:#D4D4D4;">&lt;{ </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;"> }&gt;; </span><span style="color:#6A9955;">// T11类型为 string | number</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="infer可以推断出交叉类型" tabindex="-1">infer可以推断出交叉类型 <a class="header-anchor" href="#infer可以推断出交叉类型" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T1</span><span style="color:#D4D4D4;"> = {</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T2</span><span style="color:#D4D4D4;"> = {</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">K2</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> {</span><span style="color:#DCDCAA;">a</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">b</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;">} ? </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Props</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">a</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">T1</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">b</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">T2</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;"> * k3 = T1 &amp; T2</span></span>
<span class="line"><span style="color:#6A9955;"> * 等同于 k3 = {name: string} &amp; {age: number}</span></span>
<span class="line"><span style="color:#6A9955;"> * 等同于 k3 = {name: string, age: number}</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">k3</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">K2</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Props</span><span style="color:#D4D4D4;">&gt; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;"> =  </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;"> &amp; </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// never, 交差类型是针对与接口</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://juejin.cn/post/6844904170353328135" target="_blank" rel="noreferrer">掘金</a></li></ul>`,13),o=[e];function r(t,c,D,y,i,C){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
