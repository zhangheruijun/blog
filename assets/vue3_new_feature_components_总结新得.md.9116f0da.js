import{_ as p,c as e,b as s,n,d as l,a as o,o as t}from"./app.5b8334ac.js";const r="_pb_hfx8j_2",D={pb:r},E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue3/new_feature/components/总结新得.md","lastUpdated":1745828310000}'),c={name:"vue3/new_feature/components/总结新得.md"},y=s("code",null,"Object.assign(obj, 响应式对象)",-1),i=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">watchEffect</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">params</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">url</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">methods</span><span style="color:#D4D4D4;"> } = </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">interfaceData</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">queryData</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pageableDto</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">page</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">assign</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">queryData</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// params是响应式对象, Object.assign处触发get收集依赖,☆☆☆</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">nextTick</span><span style="color:#D4D4D4;">() </span><span style="color:#6A9955;">// 阻止对requestData函数中的依赖收集</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">requestData</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">queryData</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">methods</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,1);function C(a,u,_,b,m,F){return t(),e("div",null,[s("h4",{class:n(a.$style.pb)},"1.如意需求中有时间，一定要考虑边界值情况，比如签到、会议时间等，会有根据时间来判断显示的状态及其操作",2),s("h4",{class:n(a.$style.pb)},"2.封装组件，优先使用props，子组件可以监听数据；loading、暂无数据都可以放子组件完成，数据类型放在子组件来完成(父组件传入的props类型靠子组件来约束，在父组件可以不写类型),参考table中的ruls类型，此类型就是子组件定义好的",2),s("h4",{class:n(a.$style.pb)},"3.上传文件也要考虑边界值，大文件、小文件的情况都要考虑",2),s("h4",{class:n(a.$style.pb)},[l("4.vue3中依赖收集,"),y,l(" 会触发get收集依赖")],2),i])}const d={$style:D},A=p(c,[["render",C],["__cssModules",d]]);export{E as __pageData,A as default};
