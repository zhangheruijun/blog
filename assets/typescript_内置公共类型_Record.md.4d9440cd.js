import{_ as s,c as n,o as a,a as e}from"./app.5b8334ac.js";const p="/assets/Record1.1f64def4.png";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"Record<Keys, Type>","slug":"record-keys-type","link":"#record-keys-type","children":[]}],"relativePath":"typescript/内置公共类型/Record.md","lastUpdated":1715940577000}'),l={name:"typescript/内置公共类型/Record.md"},o=e('<h3 id="record-keys-type" tabindex="-1">Record&lt;Keys, Type&gt; <a class="header-anchor" href="#record-keys-type" aria-hidden="true">#</a></h3><div class="s1">构造一个对象类型，其属性键为 Keys，其属性值为 Type，此实用程序可用于将一种类型的属性映射到另一种类型。</div><img src="'+p+`" style="height:400px;"><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 实现的方式</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Record</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">keyof</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#4EC9B0;">P</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;">]: </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// ☆☆☆☆☆ 注意,对any用keyof时,得到string | number | symbol</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">keyof</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// K = string | number | symbol</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,4),r=[o];function t(c,y,D,i,d,_){return a(),n("div",null,r)}const u=s(l,[["render",t]]);export{b as __pageData,u as default};
